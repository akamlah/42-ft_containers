[1;36m----	 vector_push_pop 	----[0m
*begin: 1, *end - 1: 777, size: 10, capacity: 10, front: 1, back: 777, empty?: 0, 
*begin: 1, *end - 1: 888, size: 11, capacity: 20, front: 1, back: 888, empty?: 0, 
*begin: 1, *end - 1: 999, size: 12, capacity: 20, front: 1, back: 999, empty?: 0, 
*begin: 1, *end - 1: 111, size: 13, capacity: 20, front: 1, back: 111, empty?: 0, 
*begin: 1, *end - 1: 222, size: 14, capacity: 20, front: 1, back: 222, empty?: 0, 
access[3]: 1
*begin: 1, *end - 1: 111, size: 13, capacity: 20, front: 1, back: 111, empty?: 0, 
*begin: 1, *end - 1: 999, size: 12, capacity: 20, front: 1, back: 999, empty?: 0, 
*begin: 1, *end - 1: 888, size: 11, capacity: 20, front: 1, back: 888, empty?: 0, 
*begin: 1, *end - 1: 777, size: 10, capacity: 20, front: 1, back: 777, empty?: 0, 
*begin: 1, *end - 1: 1, size: 9, capacity: 20, front: 1, back: 1, empty?: 0, 
*begin: 1, *end - 1: 1, size: 8, capacity: 20, front: 1, back: 1, empty?: 0, 
push_back():

*begin: AAAAAAAA, *end - 1: One long string, size: 9, capacity: 16, front: AAAAAAAA, back: One long string, empty?: 0, 
*begin: Another long string, *end - 1: Another long string, size: 1, capacity: 1, front: Another long string, back: Another long string, empty?: 0, 

[1;36m----	 vector_resize_reserve 	----[0m
*begin: 1, *end - 1: 40, size: 25, capacity: 48, front: 1, back: 40, empty?: 0, 
element[0] = 1
element[1] = 1
element[2] = 1
element[3] = 1
element[4] = 1
element[5] = 2
element[6] = 4
element[7] = 6
element[8] = 8
element[9] = 10
element[10] = 12
element[11] = 14
element[12] = 16
element[13] = 18
element[14] = 20
element[15] = 22
element[16] = 24
element[17] = 26
element[18] = 28
element[19] = 30
element[20] = 32
element[21] = 34
element[22] = 36
element[23] = 38
element[24] = 40
*begin: 1, *end - 1: 40, size: 25, capacity: 48, front: 1, back: 40, empty?: 0, 
*begin: 1, *end - 1: 1, size: 50, capacity: 50, front: 1, back: 1, empty?: 0, 
element[1] = 1
element[2] = 1
element[3] = 1
element[4] = 1
element[5] = 2
element[6] = 4
element[7] = 6
element[8] = 8
element[9] = 10
element[10] = 12
element[11] = 14
element[12] = 16
element[13] = 18
element[14] = 20
element[15] = 22
element[16] = 24
element[17] = 26
element[18] = 28
element[19] = 30
element[20] = 32
element[21] = 34
element[22] = 36
element[23] = 38
element[24] = 40
element[25] = 1
element[26] = 1
element[27] = 1
element[28] = 1
element[29] = 1
element[30] = 1
element[31] = 1
element[32] = 1
element[33] = 1
element[34] = 1
element[35] = 1
element[36] = 1
element[37] = 1
element[38] = 1
element[39] = 1
element[40] = 1
element[41] = 1
element[42] = 1
element[43] = 1
element[44] = 1
element[45] = 1
element[46] = 1
element[47] = 1
element[48] = 1
element[49] = 1
*begin: 1, *end - 1: 1, size: 5, capacity: 50, front: 1, back: 1, empty?: 0, 
*begin: 1, *end - 1: 38, size: 24, capacity: 50, front: 1, back: 38, empty?: 0, 
*begin: 1, *end - 1: 38, size: 24, capacity: 50, front: 1, back: 38, empty?: 0, 
[1;36m----	 vector_resize_reserve TESTER 	----[0m
*begin: 20, *end - 1: 3, size: 7, capacity: 7, front: 20, back: 3, empty?: 0, 
*begin: 20, *end - 1: 42, size: 10, capacity: 10, front: 20, back: 42, empty?: 0, 
*begin: 20, *end - 1: 43, size: 18, capacity: 18, front: 20, back: 43, empty?: 0, 
*begin: 20, *end - 1: 42, size: 10, capacity: 18, front: 20, back: 42, empty?: 0, 
*begin: 20, *end - 1: 44, size: 23, capacity: 23, front: 20, back: 44, empty?: 0, 
*begin: 20, *end - 1: 9, size: 5, capacity: 23, front: 20, back: 9, empty?: 0, 
*begin: 20, *end - 1: 9, size: 5, capacity: 23, front: 20, back: 9, empty?: 0, 
*begin: 20, *end - 1: 9, size: 5, capacity: 87, front: 20, back: 9, empty?: 0, 
*begin: 20, *end - 1: 9, size: 5, capacity: 88, front: 20, back: 9, empty?: 0, 
*begin: 20, *end - 1: 9, size: 5, capacity: 88, front: 20, back: 9, empty?: 0, 
after resize 0: 
*begin: 20, *end - 1: 9, size: 5, capacity: 88, front: 20, back: 9, empty?: 0, 

[1;36m----	 vector_copies 	----[0m
*begin: 2, *end - 1: 40, size: 20, capacity: 32, front: 2, back: 40, empty?: 0, 
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
*begin: 2, *end - 1: 40, size: 20, capacity: 20, front: 2, back: 40, empty?: 0, 
*begin: 3, *end - 1: 12, size: 4, capacity: 4, front: 3, back: 12, empty?: 0, 
3
6
9
12
*begin: 2, *end - 1: 40, size: 20, capacity: 32, front: 2, back: 40, empty?: 0, 
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40

[1;36m----	 vector_range_construct 	----[0m
0
3
6
9
12
15
18
21
24
27
*begin: 6, *end - 1: 15, size: 4, capacity: 4, front: 6, back: 15, empty?: 0, 
6
9
12
15

[1;36m----	 vector_swap 	----[0m
BEFORE SWAP
foo contains:
*begin: 15, *end - 1: 15, size: 3, capacity: 3, front: 15, back: 15, empty?: 0, 
bar contains:
*begin: 42, *end - 1: 42, size: 5, capacity: 5, front: 42, back: 42, empty?: 0, 
AFTER SWAP
foo contains:
*begin: 42, *end - 1: 42, size: 5, capacity: 5, front: 42, back: 42, empty?: 0, 
bar contains:
*begin: 15, *end - 1: 15, size: 3, capacity: 3, front: 15, back: 15, empty?: 0, 
Iterator validity:
1
1

[1;36m----	 vector_assign 	----[0m
[0;36m - 	 assign n 	----[0m
[0;36mn < size < capacity:[0m
*begin: -1, *end - 1: -1, size: 5, capacity: 32, front: -1, back: -1, empty?: 0, 
i: 0 | v: -1
i: 1 | v: -1
i: 2 | v: -1
i: 3 | v: -1
i: 4 | v: -1
[0;36msize < n < capacity:[0m
*begin: -1, *end - 1: -1, size: 30, capacity: 32, front: -1, back: -1, empty?: 0, 
i: 0 | v: -1
i: 1 | v: -1
i: 2 | v: -1
i: 3 | v: -1
i: 4 | v: -1
i: 5 | v: -1
i: 6 | v: -1
i: 7 | v: -1
i: 8 | v: -1
i: 9 | v: -1
i: 10 | v: -1
i: 11 | v: -1
i: 12 | v: -1
i: 13 | v: -1
i: 14 | v: -1
i: 15 | v: -1
i: 16 | v: -1
i: 17 | v: -1
i: 18 | v: -1
i: 19 | v: -1
i: 20 | v: -1
i: 21 | v: -1
i: 22 | v: -1
i: 23 | v: -1
i: 24 | v: -1
i: 25 | v: -1
i: 26 | v: -1
i: 27 | v: -1
i: 28 | v: -1
i: 29 | v: -1
[0;36msize < capacity < n:[0m
*begin: -1, *end - 1: -1, size: 40, capacity: 40, front: -1, back: -1, empty?: 0, 
i: 0 | v: -1
i: 1 | v: -1
i: 2 | v: -1
i: 3 | v: -1
i: 4 | v: -1
i: 5 | v: -1
i: 6 | v: -1
i: 7 | v: -1
i: 8 | v: -1
i: 9 | v: -1
i: 10 | v: -1
i: 11 | v: -1
i: 12 | v: -1
i: 13 | v: -1
i: 14 | v: -1
i: 15 | v: -1
i: 16 | v: -1
i: 17 | v: -1
i: 18 | v: -1
i: 19 | v: -1
i: 20 | v: -1
i: 21 | v: -1
i: 22 | v: -1
i: 23 | v: -1
i: 24 | v: -1
i: 25 | v: -1
i: 26 | v: -1
i: 27 | v: -1
i: 28 | v: -1
i: 29 | v: -1
i: 30 | v: -1
i: 31 | v: -1
i: 32 | v: -1
i: 33 | v: -1
i: 34 | v: -1
i: 35 | v: -1
i: 36 | v: -1
i: 37 | v: -1
i: 38 | v: -1
i: 39 | v: -1
[0;36m - 	 assign range 	----[0m
*begin: -1, *end - 1: -1, size: 40, capacity: 40, front: -1, back: -1, empty?: 0, 
i: 0 | v: -1 | src: 0
i: 1 | v: -1 | src: 3
i: 2 | v: -1 | src: 6
i: 3 | v: -1 | src: 9
i: 4 | v: -1 | src: 12
i: 5 | v: -1 | src: 15
i: 6 | v: -1 | src: 18
i: 7 | v: -1 | src: 21
i: 8 | v: -1 | src: 24
i: 9 | v: -1 | src: 27
i: 10 | v: -1 | src: 30
i: 11 | v: -1 | src: 33
i: 12 | v: -1 | src: 36
i: 13 | v: -1 | src: 39
i: 14 | v: -1 | src: 42
i: 15 | v: -1 | src: 45
i: 16 | v: -1 | src: 48
i: 17 | v: -1 | src: 51
i: 18 | v: -1 | src: 54
i: 19 | v: -1 | src: 57
i: 20 | v: -1 | src: 60
i: 21 | v: -1 | src: 63
i: 22 | v: -1 | src: 66
i: 23 | v: -1 | src: 69
i: 24 | v: -1 | src: 72
i: 25 | v: -1 | src: 75
i: 26 | v: -1 | src: 78
i: 27 | v: -1 | src: 81
i: 28 | v: -1 | src: 84
i: 29 | v: -1 | src: 87
i: 30 | v: -1 | src: 90
i: 31 | v: -1 | src: 93
i: 32 | v: -1 | src: 96
i: 33 | v: -1 | src: 99
i: 34 | v: -1 | src: 102
i: 35 | v: -1 | src: 105
i: 36 | v: -1 | src: 108
i: 37 | v: -1 | src: 111
i: 38 | v: -1 | src: 114
i: 39 | v: -1 | src: 117
i: 40 | v: - | src: 120
i: 41 | v: - | src: 123
i: 42 | v: - | src: 126
i: 43 | v: - | src: 129
i: 44 | v: - | src: 132
i: 45 | v: - | src: 135
i: 46 | v: - | src: 138
i: 47 | v: - | src: 141
i: 48 | v: - | src: 144
i: 49 | v: - | src: 147
[0;36mrange < size[0m
*begin: 0, *end - 1: 9, size: 4, capacity: 40, front: 0, back: 9, empty?: 0, 
i: 0 | v: 0
i: 1 | v: 3
i: 2 | v: 6
i: 3 | v: 9
[0;36msize < range < capacity[0m
*begin: 0, *end - 1: 27, size: 10, capacity: 40, front: 0, back: 27, empty?: 0, 
i: 0 | v: 0
i: 1 | v: 3
i: 2 | v: 6
i: 3 | v: 9
i: 4 | v: 12
i: 5 | v: 15
i: 6 | v: 18
i: 7 | v: 21
i: 8 | v: 24
i: 9 | v: 27
[0;36msize < capacity < range[0m
*begin: 0, *end - 1: 117, size: 40, capacity: 40, front: 0, back: 117, empty?: 0, 
i: 0 | v: 0 | src: 0
i: 1 | v: 3 | src: 3
i: 2 | v: 6 | src: 6
i: 3 | v: 9 | src: 9
i: 4 | v: 12 | src: 12
i: 5 | v: 15 | src: 15
i: 6 | v: 18 | src: 18
i: 7 | v: 21 | src: 21
i: 8 | v: 24 | src: 24
i: 9 | v: 27 | src: 27
i: 10 | v: 30 | src: 30
i: 11 | v: 33 | src: 33
i: 12 | v: 36 | src: 36
i: 13 | v: 39 | src: 39
i: 14 | v: 42 | src: 42
i: 15 | v: 45 | src: 45
i: 16 | v: 48 | src: 48
i: 17 | v: 51 | src: 51
i: 18 | v: 54 | src: 54
i: 19 | v: 57 | src: 57
i: 20 | v: 60 | src: 60
i: 21 | v: 63 | src: 63
i: 22 | v: 66 | src: 66
i: 23 | v: 69 | src: 69
i: 24 | v: 72 | src: 72
i: 25 | v: 75 | src: 75
i: 26 | v: 78 | src: 78
i: 27 | v: 81 | src: 81
i: 28 | v: 84 | src: 84
i: 29 | v: 87 | src: 87
i: 30 | v: 90 | src: 90
i: 31 | v: 93 | src: 93
i: 32 | v: 96 | src: 96
i: 33 | v: 99 | src: 99
i: 34 | v: 102 | src: 102
i: 35 | v: 105 | src: 105
i: 36 | v: 108 | src: 108
i: 37 | v: 111 | src: 111
i: 38 | v: 114 | src: 114
i: 39 | v: 117 | src: 117
i: 40 | v: - | src: 120
i: 41 | v: - | src: 123
i: 42 | v: - | src: 126
i: 43 | v: - | src: 129
i: 44 | v: - | src: 132
i: 45 | v: - | src: 135
i: 46 | v: - | src: 138
i: 47 | v: - | src: 141
i: 48 | v: - | src: 144
i: 49 | v: - | src: 147

[1;36m----	 vector_insert 	----[0m
*begin: 0, *end - 1: 38, size: 20, capacity: 32, front: 0, back: 38, empty?: 0, 
i: 0 | v: 0
i: 1 | v: 2
i: 2 | v: 4
i: 3 | v: 6
i: 4 | v: 8
i: 5 | v: 10
i: 6 | v: 12
i: 7 | v: 14
i: 8 | v: 16
i: 9 | v: 18
i: 10 | v: 20
i: 11 | v: 22
i: 12 | v: 24
i: 13 | v: 26
i: 14 | v: 28
i: 15 | v: 30
i: 16 | v: 32
i: 17 | v: 34
i: 18 | v: 36
i: 19 | v: 38
-1
*begin: 0, *end - 1: 38, size: 21, capacity: 32, front: 0, back: 38, empty?: 0, 
i: 0 | v: 0
i: 1 | v: 2
i: 2 | v: 4
i: 3 | v: 6
i: 4 | v: 8
i: 5 | v: -1
i: 6 | v: 10
i: 7 | v: 12
i: 8 | v: 14
i: 9 | v: 16
i: 10 | v: 18
i: 11 | v: 20
i: 12 | v: 22
i: 13 | v: 24
i: 14 | v: 26
i: 15 | v: 28
i: 16 | v: 30
i: 17 | v: 32
i: 18 | v: 34
i: 19 | v: 36
i: 20 | v: 38
-1
*begin: 0, *end - 1: -1, size: 22, capacity: 32, front: 0, back: -1, empty?: 0, 
i: 0 | v: 0
i: 1 | v: 2
i: 2 | v: 4
i: 3 | v: 6
i: 4 | v: 8
i: 5 | v: -1
i: 6 | v: 10
i: 7 | v: 12
i: 8 | v: 14
i: 9 | v: 16
i: 10 | v: 18
i: 11 | v: 20
i: 12 | v: 22
i: 13 | v: 24
i: 14 | v: 26
i: 15 | v: 28
i: 16 | v: 30
i: 17 | v: 32
i: 18 | v: 34
i: 19 | v: 36
i: 20 | v: 38
i: 21 | v: -1
*begin: 0, *end - 1: -1, size: 29, capacity: 32, front: 0, back: -1, empty?: 0, 
i: 0 | v: 0
i: 1 | v: 2
i: 2 | v: 4
i: 3 | v: 6
i: 4 | v: -2
i: 5 | v: -2
i: 6 | v: -2
i: 7 | v: -2
i: 8 | v: -2
i: 9 | v: -2
i: 10 | v: -2
i: 11 | v: 8
i: 12 | v: -1
i: 13 | v: 10
i: 14 | v: 12
i: 15 | v: 14
i: 16 | v: 16
i: 17 | v: 18
i: 18 | v: 20
i: 19 | v: 22
i: 20 | v: 24
i: 21 | v: 26
i: 22 | v: 28
i: 23 | v: 30
i: 24 | v: 32
i: 25 | v: 34
i: 26 | v: 36
i: 27 | v: 38
i: 28 | v: -1
*begin: 0, *end - 1: -2, size: 36, capacity: 36, front: 0, back: -2, empty?: 0, 
i: 0 | v: 0
i: 1 | v: 2
i: 2 | v: 4
i: 3 | v: 6
i: 4 | v: -2
i: 5 | v: -2
i: 6 | v: -2
i: 7 | v: -2
i: 8 | v: -2
i: 9 | v: -2
i: 10 | v: -2
i: 11 | v: 8
i: 12 | v: -1
i: 13 | v: 10
i: 14 | v: 12
i: 15 | v: 14
i: 16 | v: 16
i: 17 | v: 18
i: 18 | v: 20
i: 19 | v: 22
i: 20 | v: 24
i: 21 | v: 26
i: 22 | v: 28
i: 23 | v: 30
i: 24 | v: 32
i: 25 | v: 34
i: 26 | v: 36
i: 27 | v: 38
i: 28 | v: -1
i: 29 | v: -2
i: 30 | v: -2
i: 31 | v: -2
i: 32 | v: -2
i: 33 | v: -2
i: 34 | v: -2
i: 35 | v: -2
*begin: 30, *end - 1: 3, size: 10, capacity: 10, front: 30, back: 3, empty?: 0, 
*begin: 21, *end - 1: 42, size: 3, capacity: 3, front: 21, back: 42, empty?: 0, 
*begin: 21, *end - 1: 42, size: 4, capacity: 6, front: 21, back: 42, empty?: 0, 
*begin: 21, *end - 1: 84, size: 6, capacity: 6, front: 21, back: 84, empty?: 0, 
*begin: 21, *end - 1: 42, size: 4, capacity: 6, front: 21, back: 42, empty?: 0, 
*begin: 21, *end - 1: 42, size: 14, capacity: 14, front: 21, back: 42, empty?: 0, 
*begin: 30, *end - 1: 77, size: 0, capacity: 10, front: 30, back: 77, empty?: 1, 

[1;36m----	 vector_erase_range 	----[0m
*begin: 0, *end - 1: 19, size: 20, capacity: 32, front: 0, back: 19, empty?: 0, 
i: 0 | v: 0
i: 1 | v: 1
i: 2 | v: 2
i: 3 | v: 3
i: 4 | v: 4
i: 5 | v: 5
i: 6 | v: 6
i: 7 | v: 7
i: 8 | v: 8
i: 9 | v: 9
i: 10 | v: 10
i: 11 | v: 11
i: 12 | v: 12
i: 13 | v: 13
i: 14 | v: 14
i: 15 | v: 15
i: 16 | v: 16
i: 17 | v: 17
i: 18 | v: 18
i: 19 | v: 19
3
*begin: 0, *end - 1: 19, size: 19, capacity: 32, front: 0, back: 19, empty?: 0, 
i: 0 | v: 0
i: 1 | v: 1
i: 2 | v: 3
i: 3 | v: 4
i: 4 | v: 5
i: 5 | v: 6
i: 6 | v: 7
i: 7 | v: 8
i: 8 | v: 9
i: 9 | v: 10
i: 10 | v: 11
i: 11 | v: 12
i: 12 | v: 13
i: 13 | v: 14
i: 14 | v: 15
i: 15 | v: 16
i: 16 | v: 17
i: 17 | v: 18
i: 18 | v: 19
11
*begin: 0, *end - 1: 19, size: 11, capacity: 32, front: 0, back: 19, empty?: 0, 
i: 0 | v: 0
i: 1 | v: 1
i: 2 | v: 11
i: 3 | v: 12
i: 4 | v: 13
i: 5 | v: 14
i: 6 | v: 15
i: 7 | v: 16
i: 8 | v: 17
i: 9 | v: 18
i: 10 | v: 19
14
*begin: 0, *end - 1: 13, size: 5, capacity: 32, front: 0, back: 13, empty?: 0, 
i: 0 | v: 0
i: 1 | v: 1
i: 2 | v: 11
i: 3 | v: 12
i: 4 | v: 13
11
*begin: 11, *end - 1: 13, size: 3, capacity: 32, front: 11, back: 13, empty?: 0, 
i: 0 | v: 11
i: 1 | v: 12
i: 2 | v: 13
11
*begin: 11, *end - 1: 13, size: 3, capacity: 32, front: 11, back: 13, empty?: 0, 
i: 0 | v: 11
i: 1 | v: 12
i: 2 | v: 13

[1;36m----	 vector_erase 	----[0m
*begin: 0, *end - 1: 19, size: 20, capacity: 32, front: 0, back: 19, empty?: 0, 
i: 0 | v: 0
i: 1 | v: 1
i: 2 | v: 2
i: 3 | v: 3
i: 4 | v: 4
i: 5 | v: 5
i: 6 | v: 6
i: 7 | v: 7
i: 8 | v: 8
i: 9 | v: 9
i: 10 | v: 10
i: 11 | v: 11
i: 12 | v: 12
i: 13 | v: 13
i: 14 | v: 14
i: 15 | v: 15
i: 16 | v: 16
i: 17 | v: 17
i: 18 | v: 18
i: 19 | v: 19
3
*begin: 0, *end - 1: 19, size: 19, capacity: 32, front: 0, back: 19, empty?: 0, 
i: 0 | v: 0
i: 1 | v: 1
i: 2 | v: 3
i: 3 | v: 4
i: 4 | v: 5
i: 5 | v: 6
i: 6 | v: 7
i: 7 | v: 8
i: 8 | v: 9
i: 9 | v: 10
i: 10 | v: 11
i: 11 | v: 12
i: 12 | v: 13
i: 13 | v: 14
i: 14 | v: 15
i: 15 | v: 16
i: 16 | v: 17
i: 17 | v: 18
i: 18 | v: 19
1
*begin: 1, *end - 1: 19, size: 18, capacity: 32, front: 1, back: 19, empty?: 0, 
i: 0 | v: 1
i: 1 | v: 3
i: 2 | v: 4
i: 3 | v: 5
i: 4 | v: 6
i: 5 | v: 7
i: 6 | v: 8
i: 7 | v: 9
i: 8 | v: 10
i: 9 | v: 11
i: 10 | v: 12
i: 11 | v: 13
i: 12 | v: 14
i: 13 | v: 15
i: 14 | v: 16
i: 15 | v: 17
i: 16 | v: 18
i: 17 | v: 19

[1;36m----	 vector_at 	----[0m
vct.at(): 21 | vct[]: 21
vct.at(): 18 | vct[]: 18
vct.at(): 15 | vct[]: 15
vct.at(): 12 | vct[]: 12
vct.at(): 9 | vct[]: 9
vct.at(): 6 | vct[]: 6
vct.at(): 3 | vct[]: 3
*begin: 21, *end - 1: 3, size: 7, capacity: 7, front: 21, back: 3, empty?: 0, 
front(): 21 21
back(): 3 3
Catch out_of_range exception!

[1;36m----	 vector_comp_int 	----[0m
*begin: 0, *end - 1: 19, size: 20, capacity: 32, front: 0, back: 19, empty?: 0, 
*begin: 0, *end - 1: 19, size: 20, capacity: 32, front: 0, back: 19, empty?: 0, 
*begin: 0, *end - 1: 1953, size: 30, capacity: 32, front: 0, back: 1953, empty?: 0, 
i: 0 | v1: 0 | v2: 0 | v3: 0
i: 1 | v1: 1 | v2: 1 | v3: 1
i: 2 | v1: 2 | v2: 2 | v3: 2
i: 3 | v1: 3 | v2: 3 | v3: 3
i: 4 | v1: 4 | v2: 4 | v3: 4
i: 5 | v1: 5 | v2: 5 | v3: 5
i: 6 | v1: 6 | v2: 6 | v3: 6
i: 7 | v1: 7 | v2: 7 | v3: 7
i: 8 | v1: 8 | v2: 8 | v3: 8
i: 9 | v1: 9 | v2: 9 | v3: 9
i: 10 | v1: 10 | v2: 10 | v3: 10
i: 11 | v1: 11 | v2: 11 | v3: 11
i: 12 | v1: 12 | v2: 12 | v3: 12
i: 13 | v1: 13 | v2: 13 | v3: 13
i: 14 | v1: 14 | v2: 14 | v3: 14
i: 15 | v1: 15 | v2: 15 | v3: 15
i: 16 | v1: 16 | v2: 16 | v3: 16
i: 17 | v1: 17 | v2: 17 | v3: 17
i: 18 | v1: 18 | v2: 18 | v3: 18
i: 19 | v1: 19 | v2: 19 | v3: 19

v1 == v2: 1
v1 == v3: 0
v1 == v1: 1

v1 != v2: 0
v1 != v3: 1
v1 != v1: 0

v1 < v2: 0
v1 < v3: 1
v1 < v1: 0

v1 > v2: 0
v1 > v3: 0
v1 > v1: 0

v1 <= v2: 1
v1 <= v3: 1
v1 <= v1: 1

v1 >= v2: 1
v1 >= v3: 0
v1 >= v1: 1

Process 14103: 159 nodes malloced for 12 KB
Process 14103: 0 leaks for 0 total leaked bytes.

